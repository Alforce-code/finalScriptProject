<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DASHMIN - Admin Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* All your existing CSS styles remain the same */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        :root {
            --primary: #4e73df;
            --secondary: #858796;
            --success: #1cc88a;
            --info: #36b9cc;
            --warning: #f6c23e;
            --danger: #e74a3b;
            --light: #f8f9fc;
            --dark: #5a5c69;
            --sidebar-width: 250px;
        }

        body {
            display: flex;
            background-color: #f8f9fc;
            color: #333;
        }

        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background-color: #4e73df;
            color: white;
            height: 100vh;
            position: fixed;
            overflow-y: auto;
            transition: all 0.3s;
            z-index: 1000;
        }

        .sidebar-header {
            padding: 20px;
            background-color: #3a56c4;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .sidebar-header h3 {
            font-weight: 600;
            font-size: 1.2rem;
        }

        .sidebar-menu {
            padding: 20px 0;
        }

        .sidebar-menu ul {
            list-style: none;
        }

        .sidebar-menu li {
            margin-bottom: 5px;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.3s;
        }

        .sidebar-menu a:hover, .sidebar-menu a.active {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
        }

        .sidebar-menu i {
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 20px;
            transition: all 0.3s;
        }

        .topbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e3e6f0;
        }

        .search-bar {
            display: flex;
            align-items: center;
            background-color: white;
            border-radius: 4px;
            padding: 8px 15px;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            width: 300px;
        }

        .search-bar input {
            border: none;
            outline: none;
            padding: 5px;
            width: 100%;
        }

        .user-info {
            display: flex;
            align-items: center;
        }

        .user-info i {
            margin-left: 15px;
            font-size: 1.2rem;
            color: var(--secondary);
            cursor: pointer;
        }

        /* Cards Styles */
        .dashboard-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            padding: 20px;
            display: flex;
            flex-direction: column;
            border-left: 4px solid var(--primary);
        }

        .card h3 {
            font-size: 0.9rem;
            color: var(--secondary);
            margin-bottom: 10px;
        }

        .card .number {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--dark);
        }

        .card.success {
            border-left-color: var(--success);
        }

        .card.info {
            border-left-color: var(--info);
        }

        .card.warning {
            border-left-color: var(--warning);
        }

        /* Charts and Tables */
        .charts-container {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }

        .chart-box, .table-box {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            padding: 20px;
        }

        .chart-box h2, .table-box h2 {
            font-size: 1.2rem;
            margin-bottom: 15px;
            color: var(--dark);
        }

        /* Smaller chart containers */
        .chart-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            padding: 15px;
            margin-bottom: 20px;
            height: 300px; /* Smaller height */
        }

        .chart-container h2 {
            font-size: 1.1rem;
            margin-bottom: 10px;
            color: var(--dark);
        }

        .table-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            padding: 20px;
            margin-bottom: 30px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        table th, table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #e3e6f0;
        }

        table th {
            background-color: #f8f9fc;
            font-weight: 600;
            color: var(--dark);
        }

        table tr:hover {
            background-color: #f8f9fc;
        }

        /* Buttons */
        .btn {
            display: inline-block;
            padding: 10px 20px;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            font-weight: 500;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #3a56c4;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                width: 70px;
            }
            .sidebar-header h3, .sidebar-menu span {
                display: none;
            }
            .sidebar-menu i {
                margin-right: 0;
            }
            .main-content {
                margin-left: 70px;
            }
            .charts-container {
                grid-template-columns: 1fr;
            }
        }

        /* Loading indicator */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .chart-loading {
            text-align: center;
            padding: 40px;
            color: var(--secondary);
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h3>DASHMIN</h3>
        </div>
        <div class="user-info p-3">
            <div>
                <h4><%= user.firstName %> <%= user.lastName %></h4>
                <p style="color: rgba(255,255,255,0.7);">Administrator</p>
            </div>
        </div>
        <div class="sidebar-menu">
            <ul>
                <li><a href="/admin/dashboard" class="active"><i class="fas fa-tachometer-alt"></i> <span>Dashboard</span></a></li>
                <li><a href="/admin/manage-programs"><i class="fas fa-users"></i> <span>Manage Programs</span></a></li>
                <li><a href="/admin/lecturer"><i class="fas fa-graduation-cap"></i> <span>Lecturer</a></li>
                <li><a href="/admin/student"><i class="fas fa-user-graduate"></i> <span>Students</span></a></li>
                <li><a href="/admin/reports"><i class="fas fa-chart-bar"></i> <span>Reports</span></a></li>
                <li><a href="/logout"><i class="fas fa-sign-out-alt"></i> <span>Logout</span></a></li>
            </ul>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="topbar">
            <div class="search-bar">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Search...">
            </div>
            <div class="user-info">
                <i class="fas fa-envelope"></i>
                <i class="fas fa-bell"></i>
                <div class="user-details">
                    <span>Admin</span>
                </div>
            </div>
        </div>

        <!-- Dashboard Content -->
        <div id="dashboard-section">
            <h1>Admin Dashboard</h1>
            <p>Good to see you, <%= user.firstName %>!</p>
            
            <!-- Dashboard Cards -->
            <div class="dashboard-cards">
                <div class="card">
                    <h3>Students</h3>
                    <div class="number"><%= studentCount %></div>
                </div>
                <div class="card success">
                    <h3>Lecturers</h3>
                    <div class="number"><%= lecturerCount %></div>
                </div>
                <div class="card info">
                    <h3>Programs</h3>
                    <div class="number"><%= programCount %></div>
                </div>
                <div class="card warning">
                    <h3>Modules</h3>
                    <div class="number"><%= moduleCount %></div>
                </div>
            </div>

            <!-- Charts and Data Section -->
            <div class="charts-container">
                <div class="chart-box">
                    <h2>Module Performance Overview</h2>
                    <div id="performanceChartContainer">
                        <div class="chart-loading">
                            <i class="fas fa-spinner fa-spin"></i> Loading performance data...
                        </div>
                        <canvas id="performanceChart" height="250"></canvas>
                    </div>
                </div>
                <div class="table-box">
                    <h2>Top Performing Students</h2>
                    <div id="topStudentsContainer">
                        <div class="chart-loading">
                            <i class="fas fa-spinner fa-spin"></i> Loading top students...
                        </div>
                        <table id="topStudentsTable" style="display: none;">
                            <thead>
                                <tr>
                                    <th>Student</th>
                                    <th>Average Score</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Will be populated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Smaller Charts Section -->
            <div class="charts-container">
                <!-- Program Distribution Chart -->
                <div class="chart-container">
                    <h2>Program Distribution</h2>
                    <div id="programChartContainer">
                        <div class="chart-loading">
                            <i class="fas fa-spinner fa-spin"></i> Loading program data...
                        </div>
                        <canvas id="programDistributionChart" height="200"></canvas>
                    </div>
                </div>

                <!-- Gender Distribution Chart -->
                <div class="chart-container">
                    <h2>Gender Distribution</h2>
                    <div id="genderChartContainer">
                        <div class="chart-loading">
                            <i class="fas fa-spinner fa-spin"></i> Loading gender data...
                        </div>
                        <canvas id="genderDistributionChart" height="200"></canvas>
                    </div>
                </div>

                <!-- System Overview Chart -->
                <div class="chart-container">
                    <h2>System Overview</h2>
                    <div id="systemChartContainer">
                        <div class="chart-loading">
                            <i class="fas fa-spinner fa-spin"></i> Loading system data...
                        </div>
                        <canvas id="systemOverviewChart" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="table-container">
                <h2>Quick Actions</h2>
                <div style="display: flex; gap: 1rem; margin-top: 1rem;">
                    <a href="/admin/manage-programs" class="btn">Manage Programs</a>
                    <a href="/admin/lecturer" class="btn">Lecturer</a>
                    <a href="/admin/student" class="btn">Students</a>
                    <a href="/admin/reports" class="btn">View Reports</a>
                </div>
            </div>
        </div>
    </div><script>
    // Initialize the page with REAL database data only
    document.addEventListener('DOMContentLoaded', function() {
        loadDashboardCharts();
    });

    // Load all dashboard charts with REAL database data only
    async function loadDashboardCharts() {
        try {
            console.log('Loading REAL dashboard data from database...');
            const response = await fetch('/admin/dashboard-data');
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            const result = await response.json();
            console.log('REAL Dashboard data loaded:', result);
            
            if (result.success) {
                const data = result.data;
                initializeAllCharts(data);
            } else {
                throw new Error(result.error || 'Failed to load dashboard data');
            }
        } catch (error) {
            console.error('Error loading REAL dashboard data:', error);
            showEmptyDashboard();
        }
    }

    // Initialize all charts with REAL database data only
    function initializeAllCharts(data) {
        console.log('Initializing charts with REAL database data:', data);
        
        // Hide all loading indicators
        document.querySelectorAll('.chart-loading').forEach(loading => {
            loading.style.display = 'none';
        });

        // Performance Chart (Module Average Scores) - ONLY IF DATA EXISTS
        if (data.modulePerformance && data.modulePerformance.length > 0) {
            initializePerformanceChart(data.modulePerformance);
        } else {
            showNoDataMessage('performanceChartContainer', 'No grade data available in database');
        }
        
        // Program Distribution Chart - ONLY IF DATA EXISTS
        if (data.programDistribution && data.programDistribution.length > 0) {
            initializeProgramChart(data.programDistribution);
        } else {
            showNoDataMessage('programChartContainer', 'No program distribution data available');
        }
        
        // Gender Distribution Chart - ONLY IF DATA EXISTS
        if (data.genderDistribution && data.genderDistribution.length > 0) {
            initializeGenderChart(data.genderDistribution);
        } else {
            showNoDataMessage('genderChartContainer', 'No gender data available in student records');
        }
        
        // System Overview Chart - ALWAYS SHOW (uses basic counts)
        initializeSystemChart(data.systemOverview);
        
        // Top Students Table - ONLY IF DATA EXISTS
        if (data.topStudents && data.topStudents.length > 0) {
            initializeTopStudentsTable(data.topStudents);
        } else {
            showNoDataMessage('topStudentsContainer', 'No student grade data available');
        }
    }

    // Show empty state when no data
    function showEmptyDashboard() {
        document.querySelectorAll('.chart-loading').forEach(loading => {
            loading.innerHTML = '<p style="color: #dc3545;">⚠️ Database connection failed</p>';
        });
    }

    // Show no data message for specific chart
    function showNoDataMessage(containerId, message) {
        const container = document.getElementById(containerId);
        const loading = container.querySelector('.chart-loading');
        loading.innerHTML = `<p style="color: #6c757d; font-style: italic;">${message}</p>`;
    }

    // Performance Chart - Module Average Scores
    function initializePerformanceChart(modulePerformance) {
        const ctx = document.getElementById('performanceChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: modulePerformance.map(m => m.module_id),
                datasets: [{
                    label: 'Average Score (%)',
                    data: modulePerformance.map(m => m.average_score || 0),
                    backgroundColor: '#4e73df',
                    borderColor: '#4e73df',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 100,
                        title: {
                            display: true,
                            text: 'Average Score (%)'
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    }

    // Program Distribution Chart
    function initializeProgramChart(programDistribution) {
        const ctx = document.getElementById('programDistributionChart').getContext('2d');
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: programDistribution.map(p => p.program_id),
                datasets: [{
                    data: programDistribution.map(p => p.student_count || 0),
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    }

    // Gender Distribution Chart
    function initializeGenderChart(genderDistribution) {
        const ctx = document.getElementById('genderDistributionChart').getContext('2d');
        
        const maleData = genderDistribution.find(g => g.gender === 'M') || { count: 0 };
        const femaleData = genderDistribution.find(g => g.gender === 'F') || { count: 0 };

        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Male', 'Female'],
                datasets: [{
                    data: [maleData.count, femaleData.count],
                    backgroundColor: ['#4e73df', '#e74a3b']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    }

    // System Overview Chart - USES REAL COUNTS FROM DATABASE
    function initializeSystemChart(systemOverview) {
        const ctx = document.getElementById('systemOverviewChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Students', 'Lecturers', 'Modules', 'Programs'],
                datasets: [{
                    label: 'Count',
                    data: [
                        systemOverview.total_students || 0,
                        systemOverview.total_lecturers || 0,
                        systemOverview.total_modules || 0,
                        systemOverview.total_programs || 0
                    ],
                    backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    }

    // Top Students Table
    function initializeTopStudentsTable(topStudents) {
        const table = document.getElementById('topStudentsTable');
        const tbody = table.querySelector('tbody');
        const loading = document.querySelector('#topStudentsContainer .chart-loading');
        
        loading.style.display = 'none';
        table.style.display = 'table';
        
        tbody.innerHTML = '';
        
        topStudents.forEach(student => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${student.first_name} ${student.last_name}</td>
                <td>${(student.average_score || 0).toFixed(1)}%</td>
            `;
            tbody.appendChild(row);
        });
    }

    // Add active class to current page in sidebar
    const currentPage = window.location.pathname;
    document.querySelectorAll('.sidebar-menu a').forEach(link => {
        if (link.getAttribute('href') === currentPage) {
            link.classList.add('active');
        } else {
            link.classList.remove('active');
        }
    });
</script>
</body>
</html>